.row
  .col-lg-4
    %h1.lead.text-center Allocation
    %svg#allocation
  .col-lg-4
    %h1.lead.text-center Historical Worst Anual Returns
    = render 'home/historical_worst_anual_returns'
  .col-lg-4
    %h1.lead.text-center Historical Worst Annual Ending Values
    #worst
      %svg
%hr
.row
  .col-lg-4
    %h1.lead.text-center Historical Average Best & Average Annual Returns
    = render "home/historical_average"
  .col-lg-4
    %h1.lead.text-center Historical Average Ending Values
    #average
      %svg
  .col-lg-4
    %h1.lead.text-center Historical Best Ending Values
    #best
      %svg

:javascript
  historicalBarChart = [
    {
      key: "Cumulative Return",
      values: [
        {
          "label" : "A" ,
          "value" : 29.765957771107
        } ,
        {
          "label" : "B" ,
          "value" : 0
        } ,
        {
          "label" : "C" ,
          "value" : 32.807804682612
        } ,
        {
          "label" : "D" ,
          "value" : 196.45946739256
        } ,
        {
          "label" : "E" ,
          "value" : 0.19434030906893
        } ,
        {
          "label" : "F" ,
          "value" : 98.079782601442
        } ,
        {
          "label" : "G" ,
          "value" : 13.925743130903
        } ,
        {
          "label" : "H" ,
          "value" : 5.1387322875705
        }
      ]
    }
  ];




  nv.addGraph(function() {
    var chart = nv.models.discreteBarChart()
        .x(function(d) { return d.label })
        .y(function(d) { return d.value })
        .staggerLabels(true)
        //.staggerLabels(historicalBarChart[0].values.length > 8)
        .tooltips(false)
        .showValues(true)

        ;

    d3.select('#best svg')
        .datum(historicalBarChart)
        .call(chart);

    nv.utils.windowResize(chart.update);

    return chart;
  });

:javascript
  var testdata = [
      {
        key: "One",
        y: 5
      },
      {
        key: "Two",
        y: 2
      },
      {
        key: "Three",
        y: 9
      },
      {
        key: "Four",
        y: 7
      },
      {
        key: "Five",
        y: 4
      },
      {
          key: "Six",
          y: 3
      }
    ];


  nv.addGraph(function() {
      var width = nv.utils.windowSize().width - 40,
          height = nv.utils.windowSize().height / 2 - 40;

      var chart = nv.models.pie()
          .values(function(d) { return d })
          .width(width)
          .height(height);

      d3.select("#allocation")
          .datum([testdata])
        .transition().duration(1200)
          .attr('width', width)
          .attr('height', height)
          .call(chart);

      return chart;
  });

  nv.addGraph(function() {
      var width = nv.utils.windowSize().width - 40,
          height = nv.utils.windowSize().height / 2 - 40;

      var chart = nv.models.pie()
          .values(function(d) { return d })
          .width(width)
          .height(height)
          .donut(true);

      d3.select("#test2")
          .datum([testdata])
        .transition().duration(1200)
          .attr('width', width)
          .attr('height', height)
          .call(chart);

      return chart;
  });
